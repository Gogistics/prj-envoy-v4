# API Envoy IP: 181.10.0.10
static_resources:
  listeners:
  - name: listener_https
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443    
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_https
          upgrade_configs:
          - upgrade_type: websocket
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          # https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/ratelimit/v3/rls.proto#envoy-v3-api-msg-service-ratelimit-v3-ratelimitresponse
            - name: envoy.filters.http.ratelimit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                domain: "*"
                request_type: external
                stage: 0
                rate_limited_as_resource_exhausted: true
                failure_mode_deny: false
                rate_limit_service:
                  grpc_service:
                    envoy_grpc:
                      cluster_name: ratelimit_service
                    timeout: 1s
                  transport_api_version: V3
            - name: envoy.filters.http.router
              typed_config: {}
          route_config:
            virtual_hosts:
            - name: api_servers
              domains: 
              - "atai-envoy-security.com"
              routes:
              - match: {prefix: "/api/v1"}
                route:
                  cluster: api_service
                  rate_limits:
                    - actions:
                        - source_cluster: {}
                        - destination_cluster: {}
                    - actions:
                      - generic_key:
                        {
                          descriptor_key: "rest-api-path",
                          descriptor_value: "/api/v1",
                        }
                      - header_value_match:
                        {
                          descriptor_value: "/api/v1",
                          headers: [
                            {
                              name: ":path",
                              prefix_match: "/api/v1",
                            },
                          ],
                        }
                    - actions:
                      - generic_key:
                        {
                          descriptor_key: "rest-method",
                          descriptor_value: "get",
                        }
                      - header_value_match:
                        {
                          descriptor_value: "get",
                          headers: [
                            {
                              name: ":method",
                              prefix_match: "GET",
                            }
                          ],
                        }
                    - actions:
                      - request_headers:
                        {
                          descriptor_key: jwt-tkn,
                          header_name: access_token,
                        }
                      - request_headers:
                        {
                          descriptor_key: jwt-type,
                          header_name: token_type,
                        }
                  retry_policy:
                    retry_host_predicate:
                    - name: envoy.retry_host_predicates.previous_hosts
                    host_selection_retry_max_attempts: 3
                    retry_priority:
                      name: envoy.retry_priorities.previous_priorities
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig
                        update_frequency: 2
              - match: {prefix: "/"}
                route:
                  cluster: nginx_web_server
                  rate_limits:
                    - actions:
                        - source_cluster: {}
                        - destination_cluster: {}
                    - actions:
                      - generic_key:
                        {
                          descriptor_key: "rest-method",
                          descriptor_value: "get",
                        }
                      - header_value_match:
                        {
                          descriptor_value: "get",
                          headers: [
                            {
                              name: ":method",
                              prefix_match: "GET",
                            }
                          ],
                        }
                  retry_policy:
                    retry_host_predicate:
                    - name: envoy.retry_host_predicates.previous_hosts
                    host_selection_retry_max_attempts: 5
                    retry_priority:
                      name: envoy.retry_priorities.previous_priorities
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig
                        update_frequency: 3
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            alpn_protocols: [ "h2,http/1.1" ]
            tls_certificates:
            - certificate_chain: {filename: "/etc/envoy/certs/atai-envoy-security.com.crt"}
              private_key: {filename: "/etc/envoy/certs/atai-envoy-security.com.key"}
            validation_context:
              trusted_ca:
                filename: "/etc/ssl/certs/ca-certificates.crt"

  clusters:
  - name: nginx_web_server
    connect_timeout: 3s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: nginx_web_server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 181.10.0.31
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext

  - name: api_service
    connect_timeout: 7s
    type: STATIC
    lb_policy: RING_HASH
    http2_protocol_options: {}
    circuit_breakers:
      thresholds:
        max_connections: 10000
        max_pending_requests: 100
        max_requests: 100000
    load_assignment:
      cluster_name: api_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 181.10.0.21
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext

  - name: ratelimit_service # register the RateLimitService server
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {} # enable H2 protocol
    load_assignment:
      cluster_name: ratelimit_service
      endpoints:
      - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 181.10.0.100
                  port_value: 50000
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          tls_certificates:
          - certificate_chain:
              filename: "/etc/envoy/certs/atai-envoy-security.com.crt"
            private_key:
              filename: "/etc/envoy/certs/atai-envoy-security.com.key"

layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy:
        resource_limits:
          listener:
            example_listener_name:
              connection_limit: 10000
      overload:
        global_downstream_max_connections: 50000

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001